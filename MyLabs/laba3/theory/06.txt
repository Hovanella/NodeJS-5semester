1. Перечислите основные глобальные объекты Node.js и поясните их предназначение.
	global - хранит var-данные на уровне модуля
	process - информация о среде выполнения, о текущем процессе
	buffer - класс Buffer – предназначен для работы с двоичными данными.
	console - используется для печати в stdout и stderr
Существуют только в составе модулей:
	exports - ссылка на module.exports
	module - ссылка на текущий модуль
	require - используется для импорта модулей

2. Поясните понятие «асинхронная функция».
	Асинхронная функция – это функция, после вызова которой JavaScript
приложение продолжает работать, потому что функция сразу выполняет возврат.

3. Поясните понятие стандартные «системные потоки».
	Эти потоки поставляются с node.js и могут быть использованы без подключения
дополнительных библиотек.
process.stdin - поток на чтение содержит стандартный системный поток ввода.
process.stdout - поток на запись, содержащий стандартный системный вывод.
process.stderr - поток на запись, содержащий стандартный системный вывод ошибок.

4. Поясните назначение функций process.nextTick, setImmediate, поясните в чем разница.
	Node.js является событийно-ориентированной системой. Все, что происходит в ноде,
является реакцией на события и события вызывают каскад колбеков. Этот механизм работает
на основе библиотеки libuv и называется циклом событий (event loop).
Цикл событий представляет собой процесс, состоящий из этапов (групп задач), которые
выполняются по очереди.
	setImmediate() предназначен для выполнения сценария после завершения текущей
фазы опроса, отправляется к конец очереди.
	process.nextTick отправляется в начало очереди событий, чтобы она выполнялась
сразу после завершения текущей функции.

Основное различие между setImmediate и process.nextTick заключается в том, что
обратные вызовы setImmediate помещаются в цикл обработки событий, а process.nextTick нет.

process.nextTick() технически не является частью цикла событий. Вместо этого
nextTickQueue будет обрабатываться после завершения текущей операции, независимо
от текущей фазы цикла событий.

process.nextTick() срабатывает сразу на той же фазе
setImmediate() срабатывает на следующей итерации или «тике» цикла событий